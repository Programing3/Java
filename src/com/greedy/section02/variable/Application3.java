package com.greedy.section02.variable;

public class Application3 {

	public static void main(String[] args) {
		
		/* 변수 명명 규칙 */
		/* 변수의 이름을 지을 때 아무렇게나 짓는 것이 아닌 정해진 규칙이 있다. 
		 * 실무적으로는 굉장히 중요하기 때문에 반드시 숙지해야 하고,
		 * 또한 규칙에 맞는 올바른 변수명을 짓는 것이 좋은 프로그래밍을 하는 첫 단추이다.
		 * */
		
		/* 1. 컴파일 에러를 발생시키는 규칙
		 * 1-1. 동일한 범위 내에서 동일한 변수명을 가질 수 없다.
		 * 1-2. 예약어 사용이 불가능하다.
		 * 1-3. 변수명은 대/소문자를 구분한다.
		 * 1-4. 변수명은 숫자로 시작할 수 없다. (시작만 할 수 없고 중간에 섞어서 사용하는 것은 가능하다.)
		 * 1-5. 특수기호는 '_'와 '$'만 사용 가능하다. (따라서 공백도 사용할 수 없다.)
		 * 
		 * 2. 컴파일 에러를 발생 시키지는 않지만 개발자들 끼리의 암묵적인 규칙
		 * 2-1. 변수명의 길이 제한은 없다. 하지만 적당히 해야 한다.
		 * 2-2. 변수명이 합성어로 이루어진 경우 첫 단어는 소문자, 두 번째 시작 단어는 대문자로 한다. (camel-case)
		 * 2-3. 단어오 단어 사이에 언더스코어(_)로 구분하지 않는다.
		 * 2-4. 한글로 변수명을 짓는 것이 가능하지만 권장하지 않는다.
		 * 2-5. 변수 안에 저장된 값이 어떤 의미를 가지는지 명확하게 표현하도록 한다.
		 * 2-6. 전형적인 변수 이름이 있다면 가급적이면 사용하도록 한다. (sum, avg, cnt)
		 * 2-7. 명사 형으로 작성해야 한다.
		 * 2-8. boolean 형은 의문문으로 가급적이면 긍정형태로 네이밍한다.
		 * */
		
		/* 1. 컴파일 에러를 발생시키는 규칙 */
		/* 1-1. 동일한 범위 내에서 동일한 변수명을 가질 수 없다. */
		int age = 20;
//		int age = 30;		동일한 변수명을 사용하면 에러 발생
		
		/* 1-2. 예약어는 사용이 불가능하다. */
//		int true;			예약어 사용 불가
//		int for;			예약어 사용 불가
		
		/* 1-3. 변수명은 대소문자를 구분한다. */
		int True;			//예약어와 다른 것으로 취급한다.
		
		/* 1-4. 변수명은 숫자로 시작할 수 없다. */
//		int 1age;			숫자로 시작해서 에러 발생
		int age1;
		
		/* 1-5. 특수기호는 '_'와 '$'만 사용 가능하다. */
//		int sh@rp = 20;
		int $harp = 20;
		int age_ = 20;
		
		/* 2. 컴파일 에러를 발생시키지는 않지만 개발자들 끼리의 암묵적인 규칙 */
		/* 2-1. 변수명의 길이 제한은 없다. 하지만 적당히 하자. */
		int qqqqqqqqweregfaspnpbvadpsindfpsdfnaspdofnmpoqwnfpondfpg;
		
		/* 2-2. 변수명이 합성어로 이루어진 경우는 첫 단어는 소문자,
		 * 두 번째 시작하는 단어는 대문자로 시작한다.
		 * 단, 자바에서 클래스명만 유일하게 첫 문자부터 대문자로 시작한다.
		 * */
		int maxAge = 20;
		int minAge = 10;
		
		/* 2-3. 단어와 단어 사이의 연결을 언더스코어(_)를 사용하지 않는다. */
		String user_name;		//에러가 발생하지는 않지만 이렇게 사용하지 않는다.
		String userName;		//이게 올바른 표현이다.
		
		/* 2-4. 한글로 변수명을 짓는 것은 가능하지만 권장하지 않는다. */
		int 나이;				//가능하지만 권자항지 않는다.
		
		/* 2-5. 변수 안에 저장된 값이 어떤 의미를 가지는지 명확하게 표현하도록 한다. */
		String s;				//변수가 어떤 의미인지 파악하기 힘들다.
		String name;			//문자열 형태의 이름이 저장되겠구나 하는 의도가 파악된다.
		
		/* 2-6. 전형적인 변수 이름이 있다면 가급적 사용하도록 한다. */
		int sum = 0;
//		int hap = 0;
		int max = 10;
		int min = 1;
		int count = 1;
		
		/* 2-7. 명사형으로 작성할 수 있도록 한다. */
		String goHome;			//가능하긴 하지만 가급적 명사형으로 짓는다.
		String home;
		
		/* 2-8. boolean 형은 의문문으로 작성하되 가급적 긍정 형태로 작성한다. */
		boolean isAlive = true;
		boolean isDead = false;	//부정형보다는 긍정형이 더 나은 방식이다.
	}

}











